package com.example.be_datn.common.Email;


import com.example.be_datn.service.statistics.ThongKeService;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Map;
import java.util.Random;

@Service
public class EmailServices {
    private final JavaMailSender mailSender;
    private final ThongKeService thongKeService;

@Autowired
    public EmailServices(JavaMailSender mailSender, ThongKeService thongKeService) {
        this.mailSender = mailSender;
        this.thongKeService = thongKeService;
    }


    public String generateRandomPassword(int length) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        Random random = new Random();
        StringBuilder password = new StringBuilder();
        for (int i = 0; i < length; i++) {
            password.append(characters.charAt(random.nextInt(characters.length())));
        }
        return password.toString();
    }

    @Async
    public void sendWelcomeEmail(String to, String employeeName, String email, String password) throws MessagingException {
        try {
            // T·∫°o MimeMessage
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            // Thi·∫øt l·∫≠p th√¥ng tin email
            helper.setTo(to);
            helper.setSubject("üåø Ch√†o m·ª´ng b·∫°n gia nh·∫≠p MobileWorld!");
            helper.setFrom("no-reply@mobileworld.com.vn");

            // N·ªôi dung HTML c·ªßa email v·ªõi t√¥ng xanh l√° + ƒëen
            String htmlContent = """
        <!DOCTYPE html>
        <html lang="vi">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ch√†o M·ª´ng Nh√¢n Vi√™n M·ªõi</title>
            <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
            <style>
                body {
                    margin: 0;
                    padding: 0;
                    font-family: 'Poppins', Arial, sans-serif;
                    background-color: #f0f2f5;
                    color: #222;
                }
                .container {
                    width: 100%;
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }
                .header {
                    background: linear-gradient(135deg, #28a745, #1e7e34);
                    padding: 25px;
                    text-align: center;
                    border-radius: 12px 12px 0 0;
                }
                .header h1 {
                    margin: 0;
                    font-size: 26px;
                    color: #fff;
                    font-weight: 600;
                }
                .content {
                    background-color: #ffffff;
                    padding: 25px;
                    border-radius: 0 0 12px 12px;
                    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
                    text-align: center;
                }
                .thank-you-section h2 {
                    font-size: 28px;
                    color: #28a745;
                    margin: 0 0 10px;
                    font-weight: 600;
                }
                .thank-you-section p {
                    font-size: 14px;
                    color: #444;
                    margin-bottom: 20px;
                }
                .highlight-box {
                    background: #e8f5e9;
                    color: #155724;
                    padding: 15px;
                    border-radius: 8px;
                    margin: 20px 0;
                    font-size: 16px;
                    font-weight: 500;
                }
                .account-info {
                    background: #f9f9f9;
                    border: 1px solid #e0e0e0;
                    padding: 15px;
                    border-radius: 8px;
                    margin-bottom: 20px;
                    text-align: left;
                }
                .account-info p {
                    margin: 8px 0;
                    font-size: 14px;
                    color: #333;
                }
                .account-info strong {
                    color: #28a745;
                }
                .cta-button {
                    display: inline-block;
                    padding: 12px 24px;
                    background: linear-gradient(135deg, #28a745, #218838);
                    color: #fff !important;
                    text-decoration: none;
                    border-radius: 8px;
                    font-size: 15px;
                    font-weight: 500;
                    transition: background 0.3s ease;
                }
                .cta-button:hover {
                    background: linear-gradient(135deg, #218838, #1e7e34);
                }
                .footer {
                    text-align: center;
                    padding: 15px 0;
                    font-size: 12px;
                    color: #666;
                }
                .footer a {
                    color: #28a745;
                    text-decoration: none;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>MobileWorld</h1>
                </div>
                <div class="content">
                    <div class="thank-you-section">
                        <h2>Ch√†o m·ª´ng!</h2>
                        <p>Xin ch√†o {employeeName}, b·∫°n ƒë√£ ch√≠nh th·ª©c gia nh·∫≠p ƒë·ªôi ng≈© MobileWorld.</p>
                    </div>
                    <div class="highlight-box">
                        üéâ Ch√∫c m·ª´ng b·∫°n tr·ªü th√†nh m·ªôt ph·∫ßn c·ªßa ƒë·∫°i gia ƒë√¨nh MobileWorld!
                    </div>
                    <div class="account-info">
                        <p><strong>T√™n ƒëƒÉng nh·∫≠p:</strong> {email}</p>
                        <p><strong>M·∫≠t kh·∫©u:</strong> {password}</p>
                        <p><em>‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n c·ªßa b·∫°n.</em></p>
                    </div>
                    <p>
                        <a href="http://localhost:3000/login" class="cta-button">ƒêƒÇNG NH·∫¨P NGAY</a>
                    </p>
                </div>
                <div class="footer">
                    <p>Ch√∫ng t√¥i r·∫•t mong ch·ªù ƒë∆∞·ª£c l√†m vi·ªác c√πng b·∫°n!</p>
                    <p>Tr√¢n tr·ªçng, <strong>MobileWorld</strong></p>
                    <p>Li√™n h·ªá: <a href="mailto:lequangphuc2872006@gmail.com">lequangphuc2872006@gmail.com</a></p>
                </div>
            </div>
        </body>
        </html>
        """;

            // Thay th·∫ø placeholder
            String finalHtmlContent = htmlContent
                    .replace("{employeeName}", employeeName)
                    .replace("{email}", email)
                    .replace("{password}", password);

            // N·ªôi dung plain-text fallback
            String plainTextContent = """
                Ch√†o m·ª´ng b·∫°n gia nh·∫≠p MobileWorld!

                Xin ch√†o %s,

                B·∫°n ƒë√£ ch√≠nh th·ª©c tr·ªü th√†nh Th√†nh vi√™n c·ªßa MobileWorld. 
                - T√™n ƒëƒÉng nh·∫≠p: %s
                - M·∫≠t kh·∫©u: %s

                Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n c·ªßa b·∫°n.
                ƒêƒÉng nh·∫≠p ngay: http://localhost:3000/login

                Tr√¢n tr·ªçng,
                MobileWorld
                Li√™n h·ªá: lequangphuc2872006@gmail.com
                """.formatted(employeeName, email, password);

            helper.setText(plainTextContent, finalHtmlContent);

            // G·ª≠i email
            mailSender.send(message);
            System.out.println("‚úÖ Email ch√†o m·ª´ng ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi: " + to);

        } catch (MessagingException e) {
            System.err.println("‚ùå L·ªói khi g·ª≠i email ch√†o m·ª´ng t·ªõi " + to + ": " + e.getMessage());
            e.printStackTrace();
        }
    }


    @Async
    public void EmailKH(String to, String customerName, String email, String password) throws MessagingException {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(to);
            helper.setSubject("üéâ Ch√†o m·ª´ng b·∫°n tr·ªü th√†nh kh√°ch h√†ng c·ªßa MobileWorld!");
            helper.setFrom("no-reply@mobileworld.com.vn");

            String htmlContent = """
        <!DOCTYPE html>
        <html lang="vi">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Ch√†o M·ª´ng Kh√°ch H√†ng M·ªõi</title>
            <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
            <style>
                body {
                    margin: 0;
                    padding: 0;
                    font-family: 'Poppins', Arial, sans-serif;
                    background-color: #f0f2f5;
                    color: #222;
                }
                .container {
                    width: 100%;
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }
                .header {
                    background: linear-gradient(135deg, #28a745, #1e7e34);
                    padding: 25px;
                    text-align: center;
                    border-radius: 12px 12px 0 0;
                }
                .header h1 {
                    margin: 0;
                    font-size: 26px;
                    color: #fff;
                    font-weight: 600;
                }
                .content {
                    background-color: #ffffff;
                    padding: 25px;
                    border-radius: 0 0 12px 12px;
                    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
                    text-align: center;
                }
                .thank-you-section h2 {
                    font-size: 28px;
                    color: #28a745;
                    margin: 0 0 10px;
                    font-weight: 600;
                }
                .thank-you-section p {
                    font-size: 14px;
                    color: #444;
                    margin-bottom: 20px;
                }
                .highlight-box {
                    background: #e8f5e9;
                    color: #155724;
                    padding: 15px;
                    border-radius: 8px;
                    margin: 20px 0;
                    font-size: 16px;
                    font-weight: 500;
                }
                .account-info {
                    background: #f9f9f9;
                    border: 1px solid #e0e0e0;
                    padding: 15px;
                    border-radius: 8px;
                    margin-bottom: 20px;
                    text-align: left;
                }
                .account-info p {
                    margin: 8px 0;
                    font-size: 14px;
                    color: #333;
                }
                .account-info strong {
                    color: #28a745;
                }
                .cta-button {
                    display: inline-block;
                    padding: 12px 24px;
                    background: linear-gradient(135deg, #28a745, #218838);
                    color: #fff !important;
                    text-decoration: none;
                    border-radius: 8px;
                    font-size: 15px;
                    font-weight: 500;
                    transition: background 0.3s ease;
                }
                .cta-button:hover {
                    background: linear-gradient(135deg, #218838, #1e7e34);
                }
                .footer {
                    text-align: center;
                    padding: 15px 0;
                    font-size: 12px;
                    color: #666;
                }
                .footer a {
                    color: #28a745;
                    text-decoration: none;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>MobileWorld</h1>
                </div>
                <div class="content">
                    <div class="thank-you-section">
                        <h2>Xin ch√†o {customerName}!</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ tr·ªü th√†nh kh√°ch h√†ng c·ªßa MobileWorld üéâ</p>
                    </div>
                    <div class="highlight-box">
                        üéä T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!
                    </div>
                    <div class="account-info">
                        <p><strong>Email ƒëƒÉng nh·∫≠p:</strong> {email}</p>
                        <p><strong>M·∫≠t kh·∫©u:</strong> {password}</p>
                        <p><em>‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n.</em></p>
                    </div>
                    <p>
                        <a href="http://localhost:3000/login" class="cta-button">ƒêƒÇNG NH·∫¨P NGAY</a>
                    </p>
                </div>
                <div class="footer">
                    <p>Ch√∫ng t√¥i r·∫•t h√¢n h·∫°nh ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n ‚ù§Ô∏è</p>
                    <p>Tr√¢n tr·ªçng, <strong>MobileWorld</strong></p>
                    <p>Li√™n h·ªá: <a href="mailto:support@mobileworld.com.vn">support@mobileworld.com.vn</a></p>
                </div>
            </div>
        </body>
        </html>
        """;

            String finalHtmlContent = htmlContent
                    .replace("{customerName}", customerName)
                    .replace("{email}", email)
                    .replace("{password}", password);

            String plainTextContent = """
            Xin ch√†o %s!

            C·∫£m ∆°n b·∫°n ƒë√£ tr·ªü th√†nh kh√°ch h√†ng c·ªßa MobileWorld üéâ

            T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng:
            - Email ƒëƒÉng nh·∫≠p: %s
            - M·∫≠t kh·∫©u: %s

            Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n t·∫°i: http://localhost:3000/login

            Tr√¢n tr·ªçng,
            MobileWorld
            Li√™n h·ªá: lequangphuc2872006@gmail.com
            """.formatted(customerName, email, password);

            helper.setText(plainTextContent, finalHtmlContent);

            mailSender.send(message);
            System.out.println("‚úÖ Email ch√†o m·ª´ng kh√°ch h√†ng ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi: " + to);
        } catch (MessagingException e) {
            System.err.println("‚ùå L·ªói khi g·ª≠i email kh√°ch h√†ng t·ªõi " + to + ": " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Async
    public void sendDailyStatsEmail(String to) throws MessagingException {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(to);
            helper.setSubject("üìä B√°o c√°o th·ªëng k√™ ng√†y h√¥m qua - MobileWorld");
            helper.setFrom("lequangphuc2872006@gmail.com");

            // L·∫•y d·ªØ li·ªáu th·ªëng k√™
            Map<String, Object> thongKeTongQuan = thongKeService.thongKeTheoNgayHomQua();
            List<Map<String, Object>> trangThaiDonHang = thongKeService.getOrderStatusStatsHomQua();
            List<Map<String, Object>> loaiHoaDon = thongKeService.thongKeLoaiHoaDonHomQua();

            // ƒê·ªãnh d·∫°ng ng√†y h√¥m qua
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DAY_OF_YEAR, -1);
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String yesterday = sdf.format(cal.getTime());

            // X·ª≠ l√Ω d·ªØ li·ªáu t·ªïng quan
            double doanhThu = thongKeTongQuan.get("doanhThu") instanceof Number ? ((Number) thongKeTongQuan.get("doanhThu")).doubleValue() : 0.0;
            int sanPhamDaBan = thongKeTongQuan.get("sanPhamDaBan") instanceof Number ? ((Number) thongKeTongQuan.get("sanPhamDaBan")).intValue() : 0;
            int tongSoDonHang = thongKeTongQuan.get("tongSoDonHang") instanceof Number ? ((Number) thongKeTongQuan.get("tongSoDonHang")).intValue() : 0;

            // X·ª≠ l√Ω b·∫£ng tr·∫°ng th√°i ƒë∆°n h√†ng
            String trangThaiContent;
            if (trangThaiDonHang.isEmpty()) {
                trangThaiContent = "<tr><td colspan='2' style='text-align: center; padding: 10px;'>Kh√¥ng c√≥ d·ªØ li·ªáu ng√†y h√¥m qua</td></tr>";
            } else {
                StringBuilder trangThaiHtml = new StringBuilder();
                for (Map<String, Object> statusEntry : trangThaiDonHang) {
                    String trangThaiName = String.valueOf(statusEntry.get("trangThai")); // Already mapped
                    long soLuong = statusEntry.get("soLuong") instanceof Number ? ((Number) statusEntry.get("soLuong")).longValue() : 0;
                    trangThaiHtml.append(String.format("<tr><td style='text-align: center; padding: 10px;'>%s</td><td style='text-align: center; padding: 10px;'>%d</td></tr>", trangThaiName, soLuong));
                }
                trangThaiContent = trangThaiHtml.toString();
            }

            // X·ª≠ l√Ω b·∫£ng lo·∫°i h√≥a ƒë∆°n
            String loaiDonContent;
            if (loaiHoaDon.isEmpty()) {
                loaiDonContent = "<tr><td colspan='2' style='text-align: center; padding: 10px;'>Kh√¥ng c√≥ d·ªØ li·ªáu ng√†y h√¥m qua</td></tr>";
            } else {
                StringBuilder loaiDonHtml = new StringBuilder();
                for (Map<String, Object> ld : loaiHoaDon) {
                    String loaiDon = ld.get("loaiDon") != null ? String.valueOf(ld.get("loaiDon")) : "Kh√¥ng x√°c ƒë·ªãnh";
                    long soLuong = ld.get("soLuong") instanceof Number ? ((Number) ld.get("soLuong")).longValue() : 0;
                    loaiDonHtml.append(String.format("<tr><td style='text-align: center; padding: 10px;'>%s</td><td style='text-align: center; padding: 10px;'>%d</td></tr>", loaiDon, soLuong));
                }
                loaiDonContent = loaiDonHtml.toString();
            }

            String htmlContent = """
                    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h1 style="color: #333;">MobileWorld</h1>
                        <h2>B√°o c√°o th·ªëng k√™ ng√†y {yesterday}</h2>
                        <h3>T·ªïng quan</h3>
                        <p><strong>Doanh thu (t·∫°m t√≠nh):</strong> {doanhThu} VNƒê</p>
                        <p><strong>S·∫£n ph·∫©m ƒë√£ b√°n:</strong> {sanPhamDaBan}</p>
                        <p><strong>T·ªïng s·ªë ƒë∆°n h√†ng:</strong> {tongSoDonHang}</p>                        
                        <h3>Tr·∫°ng th√°i ƒë∆°n h√†ng</h3>
                        <table style="width: 100%; border-collapse: collapse; border: 1px solid #ddd;">
                            <tr style="background-color: #68b281; color: white;">
                                <th style="text-align: center; padding: 10px;">Tr·∫°ng th√°i</th>
                                <th style="text-align: center; padding: 10px;">S·ªë l∆∞·ª£ng</th>
                            </tr>
                            {trangThai}
                        </table>
                        <h3>Ph√¢n ph·ªëi ƒëa k√™nh</h3>
                        <table style="width: 100%; border-collapse: collapse; border: 1px solid #ddd;">
                            <tr style="background-color: #68b281; color: white;">
                                <th style="text-align: center; padding: 10px;">Lo·∫°i h√≥a ƒë∆°n</th>
                                <th style="text-align: center; padding: 10px;">S·ªë l∆∞·ª£ng</th>
                            </tr>
                            {loaiDon}
                        </table>
                        <p>L∆∞u √Ω: N·∫øu c√≥ th·∫Øc m·∫Øc v·ªÅ b√°o c√°o, vui l√≤ng li√™n h·ªá qua email lequangphuc2872006@gmail.com</p>
                        <p>Tr√¢n tr·ªçng,<br>MobileWorld</p>
                        <p>Li√™n h·ªá: lequangphuc2872006@gmail.com</p>
                    </div>
            """;

            String finalHtmlContent = htmlContent
                    .replace("{yesterday}", yesterday)
                    .replace("{doanhThu}", String.format("%,.0f", doanhThu))
                    .replace("{sanPhamDaBan}", String.valueOf(sanPhamDaBan))
                    .replace("{tongSoDonHang}", String.valueOf(tongSoDonHang))
                    .replace("{trangThai}", trangThaiContent)
                    .replace("{loaiDon}", loaiDonContent);

            StringBuilder plainTextContent = new StringBuilder();
            plainTextContent.append(String.format("B√°o c√°o th·ªëng k√™ ng√†y %s\n\n", yesterday));
            plainTextContent.append("T·ªïng quan:\n");
            plainTextContent.append(String.format("- Doanh thu: %,.0f VNƒê\n", doanhThu));
            plainTextContent.append(String.format("- S·∫£n ph·∫©m ƒë√£ b√°n: %d\n", sanPhamDaBan));
            plainTextContent.append(String.format("- T·ªïng s·ªë ƒë∆°n h√†ng: %d\n\n", tongSoDonHang));
            plainTextContent.append("Tr·∫°ng th√°i ƒë∆°n h√†ng:\n");
            if (trangThaiDonHang.isEmpty()) {
                plainTextContent.append("- Kh√¥ng c√≥ d·ªØ li·ªáu ng√†y h√¥m qua\n");
            } else {
                for (Map<String, Object> statusEntry : trangThaiDonHang) {
                    String trangThaiName = String.valueOf(statusEntry.get("trangThai")); // Already mapped
                    long soLuong = statusEntry.get("soLuong") instanceof Number ? ((Number) statusEntry.get("soLuong")).longValue() : 0;
                    plainTextContent.append(String.format("- %s: %d\n", trangThaiName, soLuong));
                }
            }
            plainTextContent.append("\nPh√¢n ph·ªëi ƒëa k√™nh:\n");
            if (loaiHoaDon.isEmpty()) {
                plainTextContent.append("- Kh√¥ng c√≥ d·ªØ li·ªáu ng√†y h√¥m qua\n");
            } else {
                for (Map<String, Object> ld : loaiHoaDon) {
                    String loaiDon = ld.get("loaiDon") != null ? String.valueOf(ld.get("loaiDon")) : "Kh√¥ng x√°c ƒë·ªãnh";
                    long soLuong = ld.get("soLuong") instanceof Number ? ((Number) ld.get("soLuong")).longValue() : 0;
                    plainTextContent.append(String.format("- %s: %d\n", loaiDon, soLuong));
                }
            }
            plainTextContent.append("\nL∆∞u √Ω: N·∫øu c√≥ th·∫Øc m·∫Øc v·ªÅ b√°o c√°o, vui l√≤ng li√™n h·ªá qua email lequangphuc2872006@gmail.com\n");
            plainTextContent.append("Nh·∫•n v√†o li√™n k·∫øt ƒë·ªÉ xem b√°o c√°o chi ti·∫øt: http://localhost:3000/dashboard\n");
            plainTextContent.append("\nTr√¢n tr·ªçng,\nMobileWorld\nLi√™n h·ªá: lequangphuc2872006@gmail.com");

            helper.setText(plainTextContent.toString(), finalHtmlContent);
            mailSender.send(message);
            System.out.println("Email b√°o c√°o th·ªëng k√™ ng√†y h√¥m qua ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi: " + to);
        } catch (MessagingException e) {
            System.err.println("L·ªói khi g·ª≠i email b√°o c√°o th·ªëng k√™ t·ªõi " + to + ": " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Scheduled(cron = "0 0 1 * * ?")
    public void scheduleDailyStatsEmail() throws MessagingException {
        sendDailyStatsEmail("minhndth02076@fpt.edu.vn");
    }
}
